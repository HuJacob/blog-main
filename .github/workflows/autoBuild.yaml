# name: autoBuild
# on:
#   push:
#     branches:
#       - master
#       - main
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
#       - uses: actions/setup-python@v2
#         with:
#           python-version: 3.x
#       - run: pip install -r requirements.txt
#       - run: mkdocs gh-deploy --force
#       - uses: peaceiris/actions-gh-pages@v3
#         with:
#           personal_token: ${{ secrets.TOKEN }}
#           publish_dir: ./publish
#           publish_branch: gh-pages
#           keep_files: true


# name: autoBuild

# on:
#   push:
#     branches:
#       - master
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0  # Ensure full history is available
#           submodules: recursive  # Ensure submodules are checked out

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: 3.x

#       - run: pip install -r requirements.txt

#       - name: Install dependencies
#         run: |
#           python -m pip install setuptools
#           cd plugins/mkdocs-toc-plugin
#           python setup.py develop

#       - name: Create publish directory
#         run: mkdir -p ./publish

#       - name: Create CNAME file
#         run: echo "hellohjk.site" > ./publish/CNAME
#       - run: mkdocs gh-deploy --force
#       - name: Deploy to gh-pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           personal_token: ${{ secrets.TOKEN }}
#           publish_dir: ./publish
#           publish_branch: gh-pages
#           keep_files: true



# project-root/
# |-- .github/
# |   |-- workflows/
# |       |-- autoBuild.yml
# |-- plugins/
# |   |-- mkdocs-toc-plugin/
# |       |-- mkdocs-toc-plugin/
# |       |-- setup.py
# |   |requirements.txt
# |-- other_files/
# |-- ...


name: autoBuild

on:
  push:
    branches:
      - main    # 根据你的主分支名称修改（main 或 master）
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # 允许写入 gh-pages 分支

    steps:
      # 1. 检出代码（包含子模块）
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      # 2. 设置 Python 环境
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # 3. 缓存依赖加速构建
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4. 安装依赖
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          cd plugins/mkdocs-toc-plugin
          python setup.py develop

      # 5. 构建 MkDocs 站点
      - name: Build site
        run: |
          mkdocs build --site-dir site  # 强制生成到 site 目录
          echo "hellohjk.site" > site/CNAME  # 自动生成 CNAME

      # 6. 部署到 gh-pages 分支
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # 使用内置 Token
          publish_dir: ./site          # 指向构建目录
          publish_branch: gh-pages     # 目标分支
          force_orphan: true           # 强制清理旧文件
          keep_files: false            # 不保留历史文件
